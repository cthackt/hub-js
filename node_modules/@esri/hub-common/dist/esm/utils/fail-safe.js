/**
 * Wrap an async function such that it will never reject
 * @param {Function} fn Async Function that we want to never fail
 * @param {Object} resolveWith Object to resolve with in the event of a failure
 */
export function failSafe(fn, resolveWith) {
    if (resolveWith === void 0) { resolveWith = {}; }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return fn.apply(void 0, args).catch(function (_) {
            return resolveWith;
        });
    };
}
//# sourceMappingURL=fail-safe.js.map