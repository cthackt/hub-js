import { __awaiter, __generator } from "tslib";
import { lookupDomain, removeDomain } from ".";
import { getProp } from "../..";
/**
 * Remove an entry from the domain service, based on a hostname
 *
 * Callers must ensure the user is a member of the org that
 * owns the domain entry else the call will fail.
 * @param hostname
 * @param hubRequestOptions
 */
export function removeDomainByHostname(hostname, hubRequestOptions) {
    return __awaiter(this, void 0, void 0, function () {
        var domainEntry, id, ex_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (hubRequestOptions.isPortal) {
                        throw new Error("removeDomainByHostname is not available in ArcGIS Enterprise. Instead, edit the hubdomain typekeyword on the item");
                    }
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 5, , 6]);
                    return [4 /*yield*/, lookupDomain(hostname, hubRequestOptions)];
                case 2:
                    domainEntry = _a.sent();
                    id = getProp(domainEntry, "id");
                    if (!id) return [3 /*break*/, 4];
                    return [4 /*yield*/, removeDomain(id, hubRequestOptions)];
                case 3:
                    _a.sent();
                    _a.label = 4;
                case 4: return [3 /*break*/, 6];
                case 5:
                    ex_1 = _a.sent();
                    throw new Error("Error removing domain entry for " + hostname + ": " + ex_1);
                case 6: return [2 /*return*/];
            }
        });
    });
}
//# sourceMappingURL=removeDomainByHostname.js.map