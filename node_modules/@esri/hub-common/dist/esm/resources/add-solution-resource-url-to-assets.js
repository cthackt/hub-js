import { getPortalApiUrl } from "../urls";
/**
 * Add a url property to the entries in the assets hash
 * @param {IModelTemplate} template
 * @param {IHubRequestOptions} hubRequestOptions
 */
export function addSolutionResourceUrlToAssets(template, hubRequestOptions) {
    /* istanbul ignore next */
    var assets = template.assets || template.resources || [];
    if (template.bundleItemId) {
        var portalRestUrl = getPortalApiUrl(hubRequestOptions.portalSelf);
        // the resources are stored on the solution item, and that Id is attached
        // into the template as .bundleItemId
        var solutionItemUrl_1 = portalRestUrl + "/content/items/" + template.bundleItemId;
        // the resources on the solution are prefixed with the item id of the item the
        // template was created from, which is stored as .itemId
        var prefix_1 = template.itemId;
        // map over the resources and convert them into assets
        assets = assets.map(function (asset) {
            // we fetch the resource from .url property
            // and we upload it using the .name property
            return {
                name: asset.name,
                type: asset.type || "resource",
                url: solutionItemUrl_1 + "/resources/" + prefix_1 + "-" + asset.name
            };
        });
    }
    return assets;
}
//# sourceMappingURL=add-solution-resource-url-to-assets.js.map