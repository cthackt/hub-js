"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createAggs = void 0;
const agoSupportedAggs = ["tags", "type", "access", "categories"];
const aggsAlias = {
    collection: "type"
};
/**
 * Get aggreations query object that AGO understands i.e. countFields and countSize
 * only on fields supported by AGO
 * @param facets comma separated list of aggregation fields
 */
function createAggs(facets) {
    // return aggs that are supported by AGO - tags, type, access
    const agoFacets = facets
        .split(",")
        .filter((facet) => agoSupportedAggs.indexOf(facet) > -1);
    const aliases = facets
        .split(",")
        .filter((facet) => Object.keys(aggsAlias).indexOf(facet) > -1);
    // if there is `collection` in facets, then check if its alias has already been added
    Object.keys(aggsAlias).forEach((key) => {
        if (aliases.indexOf(key) > -1 && !(aggsAlias[key] in agoFacets)) {
            agoFacets.push(aggsAlias[key]);
        }
    });
    return {
        countFields: agoFacets.join(","),
        countSize: 200 // max supported by AGO
    };
}
exports.createAggs = createAggs;
//# sourceMappingURL=create-aggs.js.map