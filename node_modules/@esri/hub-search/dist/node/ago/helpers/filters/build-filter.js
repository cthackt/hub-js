"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildFilter = void 0;
const hub_common_1 = require("@esri/hub-common");
function buildFilter(queryFilters, key) {
    const terms = hub_common_1.getProp(queryFilters, `${key}.terms`) || [];
    const joinType = hub_common_1.getProp(queryFilters, `${key}.fn`);
    // all params to AGO queries MUST be lower case, so we're going to force
    // lowerCase here because we use `orgId` for Hub index, and need it as `orgid`
    // for AGO. This will allow us to use whatever casing for Hub and still
    // adhere to AGO requirements
    let filter;
    if (joinType === "between") {
        const startDate = terms[0];
        let endDate = terms[1];
        if (startDate === endDate) {
            // add 1 day
            endDate = hub_common_1.addDays(startDate, 1);
        }
        const timestamps = [startDate, endDate].map((term) => new Date(term).getTime());
        filter = `${key.toLowerCase()}: [${timestamps.join(agoJoin(joinType))}]`;
    }
    else {
        filter = terms
            .map((term) => `${key.toLowerCase()}:"${term}"`)
            .join(agoJoin(joinType));
    }
    if (joinType === "not") {
        // "not" filter means everything but not those given terms
        filter = `NOT ${filter}`;
    }
    return `(${filter})`;
}
exports.buildFilter = buildFilter;
// This function returns the AGO-translation for the query types
// 'any' -> ' OR '
// 'all' => ' AND '
// 'not' => ' NOT '
// ... more filters to come, like the ones below
// 'gt' => ...
// 'lt' => ...
// 'gte' => ...
// 'lte' => ...
// 'range' => ...
function agoJoin(joinType) {
    const key = joinType || "any";
    const joinMap = {
        any: " OR ",
        all: " AND ",
        not: " NOT ",
        between: " TO "
    };
    return joinMap[key];
}
//# sourceMappingURL=build-filter.js.map