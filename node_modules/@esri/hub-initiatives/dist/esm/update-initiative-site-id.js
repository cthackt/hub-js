import { getProp, isGuid } from "@esri/hub-common";
import { updateItem, getItem } from "@esri/arcgis-rest-portal";
/**
 * Update the Site associated with an Initiative by setting the
 * `item.properties.siteId` to a new value
 *
 * Used during createSite(...) and any time we need to
 * connect a different Site to an Initiative
 *
 * @param initiativeItemId string | IItem | IModel
 * @param siteId string
 * @param hubRequestOptions IHubRequestOptions
 */
export function updateInitiativeSiteId(maybeModel, siteId, hubRequestOptions) {
    // assume it's an IItem
    var itemPromise = Promise.resolve(maybeModel);
    // if we got a string, treat it as an id
    if (typeof maybeModel === "string") {
        if (!isGuid(maybeModel)) {
            return Promise.reject(new Error("updateInitiativeSiteId was passed a string that is not a GUID."));
        }
        else {
            itemPromise = getItem(maybeModel, {
                authentication: hubRequestOptions.authentication
            });
        }
    }
    else {
        // if it's an IModel it will have `.item.id` defined
        if (getProp(maybeModel, "item.id")) {
            var m = maybeModel;
            itemPromise = Promise.resolve(m.item);
        }
    }
    // kick off the promise that will return an IItem
    return itemPromise.then(function (item) {
        // oddly, IItem does not have .properties even as an optional O_o
        // regardless, ensure .properties exists
        if (!item.properties) {
            item.properties = {};
        }
        // set the siteId
        item.properties.siteId = siteId;
        // and... update the item
        return updateItem({
            item: item,
            authentication: hubRequestOptions.authentication
        });
    });
}
//# sourceMappingURL=update-initiative-site-id.js.map