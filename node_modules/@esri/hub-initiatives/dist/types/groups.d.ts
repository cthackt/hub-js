import { IRequestOptions } from "@esri/arcgis-rest-request";
/**
 * Create an initiative collaboration or open data group
 * Note: This does not ensure a group with the proposed name does not exist. Please use
 * `checkGroupExists
 *
 * @export
 * @param {string} name
 * @param {string} description
 * @param {*} options {isOpenData: boolean, isSharedEditing: boolean}
 * @param {IRequestOptions} requestOptions
 * @returns {Promise<IInitiativeModel>}
 */
export declare function createInitiativeGroup(name: string, description: string, options: any, requestOptions: IRequestOptions): Promise<string>;
/**
 * Remove an Initiative group.
 * This assumes the group is protected
 *
 * @export
 * @param {string} id
 * @param {IRequestOptions} requestOptions
 * @returns {Promise<any>}
 */
export declare function removeInitiativeGroup(id: string, requestOptions: IRequestOptions): Promise<any>;
/**
 * Check if a group with a specific title exists in an org
 * If it does exist, and has the correct properties, we return the
 * @export
 * @param {string} title
 * @param {string} orgId
 * @param {IRequestOptions} requestOptions
 * @returns {Promise<boolean>}
 */
export declare function checkGroupExists(title: string, orgId: string, requestOptions: IRequestOptions): Promise<any>;
/**
 * Group names must be unique within an organization
 *
 * @export
 * @param {string} title
 * @param {string} orgId
 * @param {number} [step=0]
 * @param {IRequestOptions} requestOptions
 * @returns {Promise<string>}
 */
export declare function getUniqueGroupName(title: string, orgId: string, step: number, requestOptions: IRequestOptions): Promise<string>;
export declare function isSharedEditingGroup(group: any): boolean;
