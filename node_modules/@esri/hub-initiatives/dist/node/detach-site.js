"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.detachSiteFromInitiative = void 0;
const arcgis_rest_portal_1 = require("@esri/arcgis-rest-portal");
/**
 * Remove the linkage between a site and an Initiative
 * Share the site to the Org's default Collaboration Group
 *
 * @export
 * @param {string} siteId
 * @param {*} collaborationGroupId
 * @param {IRequestOptions} requestOptions
 * @returns {Promise<any>}
 */
function detachSiteFromInitiative(siteId, collaborationGroupId, requestOptions) {
    // get the site item
    return arcgis_rest_portal_1.getItem(siteId, requestOptions)
        .then((site) => {
        // remove the properties.parentInitiativeId property
        delete site.properties.parentInitiativeId;
        if (collaborationGroupId) {
            // reset the collaborationGroupId to the org's Open Data Group
            site.properties.collaborationGroupId = collaborationGroupId;
        }
        // update the site item
        const opts = Object.assign({ item: site }, requestOptions);
        return arcgis_rest_portal_1.updateItem(opts);
    })
        .then(() => {
        // share it with the group if we got a group...
        if (collaborationGroupId) {
            const opts = Object.assign({ id: siteId, groupId: collaborationGroupId }, requestOptions);
            return arcgis_rest_portal_1.shareItemWithGroup(opts);
        }
        else {
            return Promise.resolve({ success: true });
        }
    });
}
exports.detachSiteFromInitiative = detachSiteFromInitiative;
//# sourceMappingURL=detach-site.js.map