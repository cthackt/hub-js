"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.migrateSchema = exports.CURRENT_SCHEMA_VERSION = void 0;
/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
const hub_common_1 = require("@esri/hub-common");
const apply_schema_1 = require("./migrations/apply-schema");
const upgrade_one_dot_one_1 = require("./migrations/upgrade-one-dot-one");
const upgrade_two_dot_zero_1 = require("./migrations/upgrade-two-dot-zero");
const upgrade_two_dot_one_1 = require("./migrations/upgrade-two-dot-one");
const upgrade_two_dot_two_1 = require("./migrations/upgrade-two-dot-two");
/**
 * Current Schema Version
 * @protected
 */
exports.CURRENT_SCHEMA_VERSION = 2.2;
/**
 * Handle Initiative Schema Migrations.
 * If the model is on the current schema, the model object is returned.
 * If a schema migration is applied, a new object will be returned.
 *
 * @export
 * @param {IInitiativeModelFoo} model
 * @param {string} portalUrl
 * @returns {IInitiativeModel}
 */
function migrateSchema(model, portalUrl) {
    // if the model is not on the current schema, we apply all of them
    // the individual migrations will early-exit if the item version
    // is at or above the migration
    if (hub_common_1.getProp(model, "item.properties.schemaVersion") === exports.CURRENT_SCHEMA_VERSION) {
        return model;
    }
    else {
        // apply upgrade functions in order...
        model = apply_schema_1.applyInitialSchema(model, portalUrl);
        model = upgrade_one_dot_one_1.upgradeToOneDotOne(model, portalUrl);
        model = upgrade_two_dot_zero_1.upgradeToTwoDotZero(model, portalUrl);
        model = upgrade_two_dot_one_1.upgradeToTwoDotOne(model);
        model = upgrade_two_dot_two_1.upgradeToTwoDotTwo(model);
        // etc
        return model;
    }
}
exports.migrateSchema = migrateSchema;
//# sourceMappingURL=migrator.js.map