"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.upgradeToTwoDotTwo = void 0;
/* Copyright (c) 2020 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
const hub_common_1 = require("@esri/hub-common");
/**
 * Apply the 2.1 --> 2.2 Migration to an Initiative Model
 * Note: we need this migration to run every time for now, so we
 * will always run it
 *
 * @param model
 * @protected
 */
function upgradeToTwoDotTwo(model) {
    // const currVersion = getProp(model, "item.properties.schemaVersion");
    // if (currVersion < 2.2) {
    const clone = hub_common_1.cloneObject(model);
    // store the schemaVersion
    // clone.item.properties.schemaVersion = 2.2;
    const steps = hub_common_1.getProp(clone, "data.steps");
    const templateIdsFromSteps = getTemplateIdsFromSteps(steps);
    const recommendedTemplates = hub_common_1.getProp(clone, "data.recommendedTemplates") || [];
    const allTemplateIds = templateIdsFromSteps.concat(recommendedTemplates);
    // strip out duplicates
    clone.data.recommendedTemplates = allTemplateIds.reduce((acc, id) => {
        if (acc.indexOf(id) < 0) {
            acc.push(id);
        }
        return acc;
    }, []);
    return clone;
    // } else {
    //   return model;
    // }
}
exports.upgradeToTwoDotTwo = upgradeToTwoDotTwo;
/**
 * Reduce the solution template ids out of the steps array
 * @param steps is the steps array from an initiative item model.data
 */
function getTemplateIdsFromSteps(steps) {
    let templateIds = [];
    if (Array.isArray(steps)) {
        templateIds = steps.reduce((acc, step) => {
            if (hub_common_1.getProp(step, "templateIds.length")) {
                return acc.concat(step.templateIds);
            }
            return acc;
        }, []);
    }
    return templateIds;
}
//# sourceMappingURL=upgrade-two-dot-two.js.map