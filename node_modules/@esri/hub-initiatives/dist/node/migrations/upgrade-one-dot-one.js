"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getResourceUrl = exports.addDefaultResources = exports.upgradeToOneDotOne = void 0;
/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
const hub_common_1 = require("@esri/hub-common");
/**
 * Apply the 1.0 --> 1.1 Migration to an Initiative Model
 *
 * @param model
 * @param portalUrl
 * @protected
 */
function upgradeToOneDotOne(model, portalUrl) {
    const curVersion = hub_common_1.getProp(model, "item.properties.schemaVersion");
    if (curVersion < 1.1) {
        const clone = hub_common_1.cloneObject(model);
        // store the schemaVersion
        clone.item.properties.schemaVersion = 1.1;
        // add the assets...
        addDefaultResources(clone, portalUrl);
        if (!clone.data.values.bannerImage) {
            clone.data.values.bannerImage = {
                source: "bannerImage",
                display: {
                    position: { x: "50%", y: "10%" }
                }
            };
        }
        return clone;
    }
    else {
        // console.debug(`Not upgrading CurVersion: ${curVersion}`);
        return model;
    }
}
exports.upgradeToOneDotOne = upgradeToOneDotOne;
/**
 * As part of the 1.1 migration, we add a set of default image
 * resources into the hash.
 *
 * @protected
 * @param {IInitiativeModel} model
 * @param {string} [portalUrl]
 * @returns {IInitiativeModel}
 */
function addDefaultResources(model, portalUrl) {
    if (!model.data.assets) {
        model.data.assets = [
            {
                id: "bannerImage",
                url: getResourceUrl(model.item.id, "detail-image.jpg", portalUrl),
                properties: {
                    type: "resource",
                    fileName: "detail-image.jpg",
                    mimeType: "image/jepg"
                },
                license: {
                    type: "none"
                }
            },
            {
                id: "iconDark",
                url: getResourceUrl(model.item.id, "icon-dark.png", portalUrl),
                properties: {
                    type: "resource",
                    fileName: "icon-dark.png",
                    mimeType: "image/png"
                },
                license: {
                    type: "none"
                }
            },
            {
                id: "iconLight",
                url: getResourceUrl(model.item.id, "icon-light.png", portalUrl),
                properties: {
                    type: "resource",
                    fileName: "icon-light.png",
                    mimeType: "image/png"
                },
                license: {
                    type: "none"
                }
            }
        ];
    }
    return model;
}
exports.addDefaultResources = addDefaultResources;
/**
 * Construct the url for a resource. This is specific to the migration otherwise
 * if would be hoised into a more generic module
 *
 * @protected
 * @param {string} itemId
 * @param {string} resourceName
 * @param {string} [portal]
 * @param {string} [folder]
 * @returns {string}
 */
function getResourceUrl(itemId, resourceName, portal, folder) {
    // default to www.arcgis.com
    const portalUrl = portal || "https://www.arcgis.com/sharing/rest";
    let url = `${portalUrl}/content/items/${itemId}/resources`;
    if (folder) {
        url = `${url}/${folder}/${resourceName}`;
    }
    else {
        url = `${url}/${resourceName}`;
    }
    return url;
}
exports.getResourceUrl = getResourceUrl;
//# sourceMappingURL=upgrade-one-dot-one.js.map