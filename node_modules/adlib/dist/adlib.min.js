!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e=e||self).adlib={})}(this,function(e){"use strict";var l=function(e,n,r){return void 0===r&&(r=void 0),n.split(".").reduce(function(e,n){return e?e[n]:r},e)};function i(r,t){return Object.keys(r).reduce(function(e,n){return e[n]=t(r[n],n,r),e},{})}var o=function(e){return e instanceof Date},u=function(e){return"function"==typeof e},a=function(e){return"object"==typeof e},f=function(e){return e instanceof RegExp};function c(e,r,t){return t=t||"",Array.isArray(e)?e.map(n):!e||!a(e)||o(e)||f(e)||u(e)?r(e,t):Object.assign({},e,i(e,n));function n(e,n){return c(e,r,t?t+"."+n:n)}}var t=function(e){return"object"==typeof e};function p(e,n){return Array.isArray(e)?s(e.map(r).filter(function(e){return null!=e})):e&&t(e)?v(i(e,r)):d(e);function r(e,n){return p(e)}}function s(e){var n=e,r=e.reduce(function(e,n){if(g(n)&&m(n)){var r=y(n);e<r&&(e=r)}return e},-1);return-1<r&&(n=0===r?[]:"{{delete:"+(r-1)+"}}"),n}function v(i){var e=Object.keys(i).reduce(function(e,n){var r=i[n];if(g(r)&&m(r)){var t=y(r);t>e.maxLevel&&(e.maxLevel=t)}else e.obj[n]=r;return e},{obj:{},maxLevel:-1});return 0<e.maxLevel?1===e.maxLevel?void 0:"{{delete:"+(e.maxLevel-1)+"}}":e.obj}function d(e){var n=e;return"string"==typeof e&&m(e)&&(n=function(e){var n=e,r=y(e);n=0===r?void 0:"{{delete:"+r+"}}";return n}(e)),n}var y=function(e){return parseInt(e.replace(/{|}/g,"").split(":")[1])};function m(e){return!(!e||"string"!=typeof e)&&-1<e.indexOf("{{delete")}var g=function(e){return"string"==typeof e};function n(e,n,r,t){void 0===t&&(t=0);var i=n;return n||(i="{{delete:"+t+"}}"),i}var b=function(e){var n={};if(Array.isArray(e))n=e.map(b);else if("object"==typeof e)for(var r in e)null!=e[r]&&"object"==typeof e[r]?n[r]=b(e[r]):n[r]=e[r];else n=e;return n},x=/{{\s*?[\w].*?}}/g;function h(e){return e||""===e||0===e}e.adlib=function(e,a,f){if(void 0===f&&(f=null),(f=b(f)||{}).optional)throw new Error("Please do not pass in an `optional` transform; adlib provides that internally.");return f.optional=n,p(c(e,function(n,e){if("string"!=typeof n)return n;var r,t=n.match(x);return t&&t.length?(t.map(function(e){var i=!1,n=e.replace(/{|}/g,"").trim();if(-1<n.indexOf("||")){var r=n.split("||").map(function(e){return e.trim()}),o=r.length;n=r.find(function(e,n){var r,t;return r=a,t=e.split(":")[0],null!=l(r,t,null)?e:n+1===o&&(i=!0,isNaN(e)||(e=parseInt(e)),e)})}var t={key:e,value:n};if(!i){var u=function(e,n,r){var t,i=e.split(":");if(1<i.length){var o,u=i[0],a=i[1];if(i[2]&&(o=i[2]),!r||!r[a]||"function"!=typeof r[a])throw new Error("Attempted to apply non-existant transform "+a+" on "+u+" with params "+e);t=l(n,u),t=r[a](u,t,n,o)}else t=l(n,e);return t}(n,a,f);t.value=h(u)?u:e}return t}).forEach(function(e){n===e.key?("string"==typeof e.value&&(isNaN(e.value)||""===e.value||(-1<e.value.indexOf(".")?e.value=parseFloat(e.value):e.value=parseInt(e.value))),r=e.value):n=n.replace(e.key,e.value)}),h(r)?r:n):n}))},e.arborist=p,e.deepMapValues=c,e.getPropertyValue=d,e.getWithDefault=l,e.listDependencies=function(e){"string"!=typeof e&&(e=JSON.stringify(e));try{return Array.from(new Set(e.match(x))).map(function(e){return e.replace(/^{{/g,"").replace(/}}$/g,"").replace(/:.+$/,"")})}catch(e){console.error(e)}},e.mapValues=i,e.optionalTransform=n,e.pruneArray=s,e.pruneObject=v,Object.defineProperty(e,"__esModule",{value:!0})});
